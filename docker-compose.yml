version: '3.8'

networks:
  laravel:

volumes:
  mysql_data:

services:
  app:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - mysql
      - composer
    networks:
      - laravel

  mysql:
    image: mysql:5.7
    platform: linux/x86_64
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    env_file:
      - ./dockerfiles/env/mysql.env   
    volumes:
      - mysql_data:/var/lib/mysql   
    networks:
      - laravel

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
      - ./dockerfiles/php.ini:/usr/local/etc/php/php.ini
    networks:
      - laravel

  composer:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs', 'install' ]
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel
